{"version":3,"sources":["webpack:///webpack/bootstrap 1885fc1d84d530e674d0","webpack:///./pages/nested-xforms/main.js","webpack:///./~/spritewerk/src/Camera.js","webpack:///./~/spritewerk/src/Group.js","webpack:///./~/spritewerk/src/Scene.js","webpack:///./~/spritewerk/src/shapes/Rectangle.js","webpack:///./~/spritewerk/src/Ticker.js","webpack:///./~/spritewerk/src/Viewport.js"],"names":["size","rectSize","rectSizeHalf","output","document","querySelector","viewport","parent","fitToWindow","camera","scene","canvas","debug","ticker","screen","rect1","rect2","rect3","grp2","collection","add","sprite","x","y","grp3","grp1","onTick","clear","rotation","innerHTML","Math","round","gx","gy","startRender","call"],"mappings":"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ACA;AACA;AACA;AACA;AACA,YAAW,YAAY;AACvB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,qBAAoB,YAAY;AAChC;AACA;AACA;AACA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAoB,YAAY;AAChC;AACA;AACA;AACA,qBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA,qBAAoB,UAAU;AAC9B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,aAAa;AAC7B;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,MAAM;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA,iBAAgB,aAAa;AAC7B,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;;;;;;;AC1LA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;AClBA,SAAQ,YAAY;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1FA;AACA;AACA;;AAEA,SAAQ,2BAA2B;AACnC,SAAQ,SAAS;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,YAAW,YAAY;AACvB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA,qBAAoB,YAAY;AAChC;AACA;AACA;AACA,qBAAoB,YAAY;AAChC;AACA;AACA;AACA,qBAAoB,YAAY;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1885fc1d84d530e674d0\n **/","import Camera from \"spritewerk/src/Camera\";\nimport Group from \"spritewerk/src/Group\";\nimport Scene from \"spritewerk/src/Scene\";\nimport Rectangle from \"spritewerk/src/shapes/Rectangle\";\nimport Ticker from \"spritewerk/src/Ticker\";\nimport Viewport from \"spritewerk/src/Viewport\";\n\n(() => {\n    const size = 512;\n    const rectSize = 64;\n    const rectSizeHalf = rectSize / 2;\n\n    /* for logging coordinates */\n    const output = document.querySelector(\"#output\");\n    /* for logging coordinates */\n\n    let viewport = new Viewport(size, size, {\n        parent: document.querySelector(\"#spritewerk\"),\n        fitToWindow: false\n    });\n    let camera = new Camera(0, 0, size, size);\n    let scene = new Scene(viewport.canvas, camera, { debug: true });\n    let ticker = new Ticker(viewport.screen);\n\n    let rect1 = new Rectangle(-rectSizeHalf, -rectSizeHalf);\n    let rect2 = new Rectangle(-rectSizeHalf, -rectSizeHalf);\n    let rect3 = new Rectangle(-rectSizeHalf, -rectSizeHalf);\n\n    let grp2 = new Group();\n    grp2.collection.add(rect2);\n    grp2.sprite.x = rectSize;\n    grp2.sprite.y = rectSize;\n\n    let grp3 = new Group();\n    grp3.collection.add(rect3);\n    grp3.sprite.x = rectSize * 2;\n    grp3.sprite.y = rectSize * 2;\n \n    let grp1 = new Group();\n    grp1.collection.add(rect1, grp2, grp3);\n    grp1.sprite.x = size / 2;\n    grp1.sprite.y = size / 2;\n\n    ticker.onTick = ()=> {\n        scene.clear(\"#ccc\");\n\n        grp1.sprite.rotation += 1;\n        grp2.sprite.rotation -= 1;\n        grp3.sprite.rotation += 1;\n\n        /* for logging coordinates */\n        output.innerHTML = `rect 1 { x: ${Math.round(rect1.gx)}, y: ${Math.round(rect1.gy)} }\nrect 2 { x: ${Math.round(rect2.gx)}, y: ${Math.round(rect2.gy)} }\nrect 3 { x: ${Math.round(rect3.gx)}, y: ${Math.round(rect3.gy)} }`;\n        /* for logging coordinates */\n\n        scene.startRender(grp1);\n    };\n}).call(this);\n\n\n\n/** WEBPACK FOOTER **\n ** ./pages/nested-xforms/main.js\n **/","/**\n * @class Camera\n * @param {Integer} [x=0] - The x coordinate\n * @param {Integer} [y=0] - The y coordinate\n * @param {Integer} [width=800] - The viewport width\n * @param {Integer} [height=600] - The viewport height\n */\nexport default class Camera {\n    constructor (x=0, y=0, width=800, height=600) {\n        /**\n         * @member {Integer} Camera#x - The camera's x position\n         */\n        this.x = x;\n        /**\n         * @member {Integer} Camera#y - The camera's y position\n         */\n        this.y = y;\n        /**\n         * @member {Integer} Camera#width - The viewport width\n         */\n        this.width = width;\n        /**\n         * @member {Integer} Camera#height - The viewport height\n         */\n        this.height = height;\n        /**\n         * @member {Float} Camera#rotation - The camera's rotation\n         */\n        this.rotation = 0;\n        /**\n         * @member {Float} Camera#zoom - The camera's zoom value\n         */\n        this.zoom = 1;\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/spritewerk/src/Camera.js\n ** module id = 1\n ** module chunks = 0\n **/","import Collection from \"./Collection\";\nimport Sprite from \"./Sprite\";\n\n/**\n * Composes Sprite and Collection\n * @class Group\n * @requires Collection\n * @requires Sprite\n */\nexport default class Group {\n    constructor () {\n        /**\n         * @member {Collection} Group#collection - The group's collection\n         */\n        this.collection = new Collection();\n        /**\n         * @member {Sprite} Group#sprite - The group's display object\n         */\n        this.sprite = new Sprite();\n        /**\n         * @member {Boolean} Group#isGroup - Denote's the object as a group\n         */\n        this.isGroup = true;\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/spritewerk/src/Group.js\n ** module id = 2\n ** module chunks = 0\n **/","import { degreesToRadians } from \"./util/math\";\nimport Transform from \"./lib/Transform\";\n\nlet defaults = {\n    debug: false\n};\n\n/**\n * Handles rendering entities onto the canvas element\n * @class Scene\n * @requires Transform\n * \n * @param {HTMLElement} canvas - The active canvas element\n * @param {Camera} camera - The camera instance\n * @param {Object} [options]\n * @param {Boolean} [options.debug=false] - If true, renders debug objects\n */\nexport default class Scene {\n    constructor (canvas, camera, options=defaults) {\n        /**\n         * @member {HTMLElement} Scene#canvas - The active canvas element\n         */\n        this.canvas = canvas;\n        /**\n         * @member {Camera} Scene#camera - The camera instance\n         */\n        this.camera = camera;\n        /**\n         * @member {HTMLElement} Scene#options - The Scene's options\n         */\n        this.options = options;\n        /**\n         * @member {CanvasRenderingContext2D} Scene#ctx - The canvas rendering object\n         */\n        this.ctx = canvas.getContext(\"2d\");\n        /**\n         * @member {Transform} Scene#transform - The transformation matrix tracker\n         */        \n        this.transform = new Transform();\n\n        this.xformOffset = null;\n        this.cameraXformOffset = null;\n    }\n    \n    /**\n     * Applies the camera's transforms to the Transform > context\n     * @method Scene#_applyCameraTransforms\n     * @param {Camera} cam - The camera instance\n     */\n    _applyCameraTransforms (cam) {\n        this.transform.translate(-cam.x, -cam.y);\n        \n        if (cam.rotation !== 0) {\n            let rotationOffsetWidth = cam.width / 2;\n            let rotationOffsetHeight = cam.height / 2;\n            this.transform.translate(rotationOffsetWidth, rotationOffsetHeight);\n            this.transform.rotate(degreesToRadians(cam.rotation));\n            this.transform.translate(-rotationOffsetWidth, -rotationOffsetHeight);\n        }\n        \n        if (cam.zoom !== 1) {\n            let scaleOffsetWidth = (cam.width / 2) * (cam.zoom - 1);\n            let scaleOffsetHeight = (cam.height / 2) * (cam.zoom - 1);\n            this.transform.translate(-scaleOffsetWidth, -scaleOffsetHeight);\n            this.transform.scale(cam.zoom, cam.zoom);\n        }\n\n        this.cameraXformOffset = this.transform.transformPoint();\n        \n        this.ctx.setTransform.apply(\n            this.ctx, Array.prototype.slice.call(this.transform.matrix)\n        );\n    }\n\n    /**\n     * Applies a Sprite's transforms to the Transform > context\n     * @method Scene#_applyTransforms\n     * @param {Sprite} item - The sprite\n     */\n    _applyTransforms (item) {\n        this.transform.translate(item.x, item.y);\n        this.transform.rotate(degreesToRadians(item.rotation));\n        this.transform.scale(item.sx, item.sy);\n\n        this.xformOffset = this.transform.transformPoint();\n\n        this.ctx.setTransform.apply(\n            this.ctx, Array.prototype.slice.call(this.transform.matrix)\n        );\n    }\n\n    clear (fill) {\n        let canvas = this.canvas;\n\n        if (fill) {\n            this.ctx.fillStyle = fill;\n            this.ctx.fillRect(0, 0, canvas.width, canvas.height);\n        } else {\n            this.ctx.clearRect(0, 0, canvas.width, canvas.height);\n        }\n    }\n\n    /**\n     * [startRender description]\n     * @method Scene#startRender\n     * @param {Group} group The group to render\n     */\n    startRender (group) {\n        this.ctx.save();\n        this.transform.save();\n        \n        this._applyCameraTransforms(this.camera);\n        this._applyTransforms(group.sprite);\n        \n        group.sprite.render(this.ctx);\n\n        group.collection.each((item)=> {\n            this.renderItem(item);\n        });\n\n        this.ctx.restore();\n        this.transform.restore();\n    }\n\n    /**\n     * [renderItem description]\n     * @method Scene#renderItem\n     * @param  {Sprite|Group} item The item to render\n     */\n    renderItem (item) {\n        this.ctx.save();\n        this.transform.save();\n\n        if (item.isGroup) {\n\n            this._applyTransforms(item.sprite);\n\n            if (this.options.debug) {\n                this.ctx.fillRect(-8, -1, 16, 2);\n                this.ctx.fillRect(-1, -8, 2, 16);\n            }\n\n            item.sprite.render(this.ctx);\n            \n            item.collection.each((item)=> {\n                this.renderItem(item);\n            });\n        } else {\n\n            item.parentTransforms = this.transform.transformPoint();\n            // assign parent transforms before applying sprite's transforms\n            this._applyTransforms(item);\n            item.render(this.ctx);\n        }\n\n        this.ctx.restore();\n        this.transform.restore();\n    }\n\n    /**\n     * [startUpdate description]\n     * @method Scene#startUpdate\n     * @param  {Group} group [description]\n     * @param  {Float} factor [description]\n     */\n    startUpdate (group, factor) {\n        group.collection.each((item)=> {\n            this.updateItem(item, factor);\n        });\n    }\n\n    /**\n     * [updateItem description]\n     * @method Scene#updateItem\n     * @param  {Sprite|Group} item [description]\n     * @param  {Float} factor [description]\n     */\n    updateItem (item, factor) {\n        if (item.isGroup) {\n            item.collection.each((item)=> {\n                this.updateItem(item, factor);\n            });\n        } else {\n            item.update(factor);\n        }\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/spritewerk/src/Scene.js\n ** module id = 3\n ** module chunks = 0\n **/","import Sprite from \"../Sprite\";\n\n/**\n * @class Rectangle\n */\nexport default class Rectangle extends Sprite {\n    constructor (x, y, w, h) {\n        super(x, y, w, h);\n        \n        this.fill = \"#000\";\n    }\n\n    render (context) {\n        super.render(context);\n\n        context.fillStyle = this.fill;\n        context.fillRect(0, 0, this.width, this.height);\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/spritewerk/src/shapes/Rectangle.js\n ** module id = 4\n ** module chunks = 0\n **/","import { broadcast } from \"./util/radio\";\n\nconst defaults = {\n    start: true\n};\n\n/**\n * @class Ticker\n * @description Executes callback based on given fps and requestAnimationFrame\n * @author Chris Peters\n * \n * @param {Object} [opts] The Ticker's options\n * @param {Boolean} [opts.start=true] Starts timer on instantiation\n */\nexport default class Ticker {\n    constructor(screen, opts=defaults) {\n        this.screen = screen;\n        this.ticks = 0;\n        this.then = null;\n\n        this._update = this._update.bind(this);\n\n        if (opts.start) {\n            this.start();\n        }\n    }\n\n    /**\n     * dispatches events and executes callbacks\n     * @method Ticker#_update\n     */\n    _update() {\n        const now = Date.now();\n        const delta = (now - this.then) / 1000;\n\n        this.then = now;\n        this.ticks += 1;\n\n        const detail = {\n            delta,\n            ticks: this.ticks\n        };\n\n        // create and fire tick events and execute callbacks\n        this.onPreTick(delta, this.ticks);\n        broadcast(this.screen, \"pretick\", detail);\n\n        this.onTick(delta, this.ticks);\n        broadcast(this.screen, \"tick\", detail);\n\n        this.onPostTick(delta, this.ticks);\n        broadcast(this.screen, \"tick\", detail);\n\n        requestAnimationFrame(this._update);\n    }\n\n    /**\n     * A callback executed pre each tick.\n     *\n     * @method Ticker#onPreTick\n     * @param {Integer} delta The time elapsed between ticks\n     * @param {Integer} ticks The amount of ticks that have accumulated\n     */\n    onPreTick() {}\n\n    /**\n     * A callback executed on each tick.\n     *\n     * @method Ticker#onTick\n     * @param {Integer} delta The time elapsed between ticks\n     * @param {Integer} ticks The amount of ticks that have accumulated\n     */\n    onTick() {}\n\n    /**\n     * A callback executed post tick.\n     * @method Ticker#onPostTick\n     * @param {Integer} delta The time elapsed between ticks\n     * @param {Integer} ticks The amount of ticks that have accumulated\n     */\n    onPostTick() {}\n\n    /**\n     * Starts the ticker\n     * @method Ticker#start\n     */\n    start() {\n        this.then = Date.now();\n        requestAnimationFrame(this._update);\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/spritewerk/src/Ticker.js\n ** module id = 5\n ** module chunks = 0\n **/","/* eslint-disable */\nimport index from \"./\";\n/* eslint-enable */\n\nimport { applyStyles, fitToWindow } from \"./util/domHelpers\";\nimport { tuneIn } from \"./util/radio\";\n\nconst defaults = {\n    fitToWindow: true\n};\n\n/**\n * @class Viewport\n * @requires util/domHelpers\n * @requires util/radio\n *\n * @param {Integer} width The game width\n * @param {Integer} height The game height\n * @param {Object} options\n * @param {HTMLElement} [options.parent=document.body] - The parent element\n * @param {Boolean} [options.fitToWindow=true] - If true, the viewport will fill the screen while maintaining aspect ratio\n */\nexport default class Viewport {\n    constructor (width, height, options=defaults) {\n        options = Object.assign(defaults, options);\n\n        // can't set as defaults; throw errors in test env\n        if (options.window === undefined) {\n            options.window = window;\n        }\n        if (options.document === undefined) {\n            options.document = document;\n        }\n        if (options.parent === undefined) {\n            options.parent = options.document.body;\n        }\n\n        /**\n         * @member {Integer} Viewport#width - The viewport's width\n         */\n        this.width = width;\n        /**\n         * @member {Integer} Viewport#height - The viewport's height\n         */\n        this.height = height;\n        /**\n         * @member {Integer} Viewport#options - The viewport's options\n         */\n        this.options = options;\n        /**\n         * @member {HTMLElement} Viewport#canvas - The canvas element\n         */\n        this.canvas = options.document.createElement(\"canvas\");\n        /**\n         * @member {HTMLElement} Viewport#video - The video element\n         */        \n        this.video = options.document.createElement(\"video\");\n        /**\n         * @member {HTMLElement} Viewport#screen - The topmost element to handle UI. Events are also triggered from this element\n         */        \n        this.screen = options.document.createElement(\"canvas\");\n\n        this.canvas.id = \"canvas\";\n        this.video.id = \"video\";\n        this.screen.id = \"screen\";\n\n        this.canvas.width = this.screen.width = width;\n        this.canvas.height = this.screen.height = height;\n\n        const viewportStyles = {\n            height: this.height,\n            left: 0,\n            position: \"absolute\",\n            top: 0,\n            width: this.width\n        };\n    \n        applyStyles(this.canvas, viewportStyles);\n        applyStyles(this.video, viewportStyles);\n        applyStyles(this.screen, viewportStyles);\n\n        options.parent.appendChild(this.canvas);\n        options.parent.appendChild(this.video);\n        options.parent.appendChild(this.screen);\n\n        if (options.fitToWindow) {\n            tuneIn(options.window, \"resize\", this._onResize, this);\n            tuneIn(options.window, \"orientationchange\", this._onResize, this);\n            this._onResize();\n        }\n    }\n\n    /**\n     * @method Viewport#_onResize\n     */\n    _onResize () {\n        const posCoords = fitToWindow(\n            this.width, this.height, this.options.window.innerWidth, this.options.window.innerHeight\n        );\n\n        applyStyles(this.canvas, posCoords);\n        applyStyles(this.video, posCoords);\n        applyStyles(this.screen, posCoords);\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/spritewerk/src/Viewport.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}